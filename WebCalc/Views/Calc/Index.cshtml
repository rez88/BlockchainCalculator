@model WebCalc.Models.OperationModel

@{
    ViewBag.Title = "Калькулятор";
}

<h2>Калькулятор</h2>

<form action="~/Calc/Index" method="post"></form>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Oper.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Oper.Name, Model.Operations, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Oper.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Args, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Args, "Args", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Args, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="result">
                @Html.DisplayFor(model => model.Result, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
            </div>
            <hr />
            <div id="time" style="display:none"></div>
            <div id="wait" style="display:none"></div>
            <div id="ads" style="display:none">
                <img alt="реклама" src="http://yandex.ru/images/today?size=640x480" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @MyHelper.ButtonJs("Вычислить", "ExecWithAds()")
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    function ExecWithAds() {
        @if (User.Identity.IsAuthenticated)
        {
            @:realExec();
        }
        else {
            @:showAdsAndTime();
            @:showWaitResult();
            @:startTime(5);
        }
    }

    function showAdsAndTime() {
        $("#ads").show();
        $("#time").show();
    }

    function showWaitResult() {
        $("#wait").show().html("после рекламы");
    }

    function startTime(timeout) {

        if (timeout == 0) {
            realExec();
            return;
        }

        $("#time").html(timeout + " сек.");

        setTimeout(function () {
            startTime(timeout - 1);
        }, 1000);

    }

    function realExec() {
        $("#wait").show().html("вычисление началось...");

        $.ajax({
            url: "@(Url.Action("Exec", "Calc"))",
            method: "POST",
            data: $("form").serialize()
        })
        .success(function (data) {
            debugger;
            $("#ads").hide();
            $("#time").hide();
            $("#wait").hide();
            $("#result").html(data.Result);
        }
        );
    }

</script>